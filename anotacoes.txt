sequencia de comandos
	comando1 && comando2
	comando1 || comando2
	comando1 ; comando2
	(comando1 ; comando2) #executa e fica no mesmo lugar

entrada e saída de scripts
	codigos
		0: entrada (STDIN)
		1: saida padrao (STDOUT)
		2: saida de erro (STDERR)
	redirecionamento saida padrao de comandos
		date > data.txt  #sobrescreve data.txt
		date >> data.txt #escreve a data na ultima linha de data.txt
	redirecionamento de saida de erro
		ls naoexiste.txt 2> log.out
		ls naoexiste.txt 2>> log.out
		ls -l alunos.txt > log.out 2> log-erro.out #STDIN e STDERR em arquivos diferentes
		ls -l alunos.txt > log.out 2>&1 #saida de erro no mesmo arquivo da saida padrao
		ls -l alunos.txt >> log.out 2>&1 #agora concatenando as saidas ao inves de sobrescrer
		ls -l naoexiste.txttxt 2> /dev/null #vai pra lugar nenhum
    redirecionamento de entrada
		tr a Z < alunos.txt

variaveis de sistema
	>>> env  
	>>> CURSO="Curso de Shell Script"
	>>> echo $$ #PID do shell atual
	>>> export CURSO="Curso doido" #exporta a variável para o shell atual e seus filhos
	>>> HORA=`date +%H`
	>>> env #retorna as variaveis exportadas
	>>> set #retorna as variaveis locais e exportadas

protecao de caracteres
	\  #protege o proximo caracter
	"" #protege todos os caracteres, exceto $ ` /
	'' #protege todos os caracteres

execucao de script
	abre outro shell, executa e retorna
		./script.sh
	executa no mesmo shell
		source script.sh
    	. script.sh
	escolhe o shell que vai executar
		bash script.sh
		zsh script.sh
		csh script.sh    

codigos de saida ou retorno
	0: sucesso
	1-255: algum erro
	fica armazenado na variável $?
	no script:
	exit N #N é o código de saida

Entrada do usuário
	read NOMEDAVARIAVEL
	read -p "informe seu nome :" NOME
	read -s #segredo
	read -n1 #uma letra só

Parametros
	$0 - Nome do programa
	$# - Quantidade de Parâmetros
	$* - Todos os parâmetros inseridos
	$1-9 - Cada um dos parâmetros inseridos 
